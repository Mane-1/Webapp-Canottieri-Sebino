"""Initial models

Revision ID: 4a7f116e4932
Revises: 
Create Date: 2025-08-06 15:11:54.453734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a7f116e4932'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subgroups_id'), table_name='subgroups')
    op.drop_table('subgroups')
    op.drop_table('esercizi_pesi')
    op.drop_index(op.f('ix_allenamenti_id'), table_name='allenamenti')
    op.drop_index(op.f('ix_allenamenti_recurrence_id'), table_name='allenamenti')
    op.drop_table('allenamenti')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    op.drop_table('categorie')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_macro_groups_id'), table_name='macro_groups')
    op.drop_index(op.f('ix_macro_groups_name'), table_name='macro_groups')
    op.drop_table('macro_groups')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_barche_id'), table_name='barche')
    op.drop_index(op.f('ix_barche_tipo'), table_name='barche')
    op.drop_table('barche')
    op.drop_table('schede_pesi')
    op.drop_table('allenamento_subgroup_association')
    op.drop_table('barca_atleti_association')
    op.drop_table('user_roles')
    op.drop_table('user_tags')
    op.drop_index(op.f('ix_turni_data'), table_name='turni')
    op.drop_index(op.f('ix_turni_id'), table_name='turni')
    op.drop_table('turni')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('turni',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('data', sa.DATE(), nullable=False),
    sa.Column('fascia_oraria', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_turni_id'), 'turni', ['id'], unique=False)
    op.create_index(op.f('ix_turni_data'), 'turni', ['data'], unique=False)
    op.create_table('user_tags',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('tag_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tag_id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('barca_atleti_association',
    sa.Column('barca_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['barca_id'], ['barche.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('barca_id', 'user_id')
    )
    op.create_table('allenamento_subgroup_association',
    sa.Column('allenamento_id', sa.INTEGER(), nullable=False),
    sa.Column('subgroup_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['allenamento_id'], ['allenamenti.id'], ),
    sa.ForeignKeyConstraint(['subgroup_id'], ['subgroups.id'], ),
    sa.PrimaryKeyConstraint('allenamento_id', 'subgroup_id')
    )
    op.create_table('schede_pesi',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('atleta_id', sa.INTEGER(), nullable=False),
    sa.Column('esercizio_id', sa.INTEGER(), nullable=False),
    sa.Column('massimale', sa.FLOAT(), nullable=True),
    sa.Column('carico_5_rep', sa.FLOAT(), nullable=True),
    sa.Column('carico_7_rep', sa.FLOAT(), nullable=True),
    sa.Column('carico_10_rep', sa.FLOAT(), nullable=True),
    sa.Column('carico_20_rep', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['atleta_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['esercizio_id'], ['esercizi_pesi.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('barche',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nome', sa.VARCHAR(), nullable=False),
    sa.Column('tipo', sa.VARCHAR(), nullable=False),
    sa.Column('costruttore', sa.VARCHAR(), nullable=True),
    sa.Column('anno', sa.INTEGER(), nullable=True),
    sa.Column('remi_assegnati', sa.VARCHAR(), nullable=True),
    sa.Column('in_manutenzione', sa.BOOLEAN(), nullable=False),
    sa.Column('fuori_uso', sa.BOOLEAN(), nullable=False),
    sa.Column('in_prestito', sa.BOOLEAN(), nullable=False),
    sa.Column('in_trasferta', sa.BOOLEAN(), nullable=False),
    sa.Column('disponibile_dal', sa.DATE(), nullable=True),
    sa.Column('lunghezza_puntapiedi', sa.FLOAT(), nullable=True),
    sa.Column('altezza_puntapiedi', sa.FLOAT(), nullable=True),
    sa.Column('apertura_totale', sa.FLOAT(), nullable=True),
    sa.Column('altezza_scalmo_sx', sa.FLOAT(), nullable=True),
    sa.Column('altezza_scalmo_dx', sa.FLOAT(), nullable=True),
    sa.Column('semiapertura_sx', sa.FLOAT(), nullable=True),
    sa.Column('semiapertura_dx', sa.FLOAT(), nullable=True),
    sa.Column('appruamento_appoppamento', sa.FLOAT(), nullable=True),
    sa.Column('gradi_attacco', sa.FLOAT(), nullable=True),
    sa.Column('gradi_finale', sa.FLOAT(), nullable=True),
    sa.Column('boccola_sx_sopra', sa.VARCHAR(), nullable=True),
    sa.Column('boccola_dx_sopra', sa.VARCHAR(), nullable=True),
    sa.Column('rondelle_sx', sa.VARCHAR(), nullable=True),
    sa.Column('rondelle_dx', sa.VARCHAR(), nullable=True),
    sa.Column('altezza_carrello', sa.FLOAT(), nullable=True),
    sa.Column('avanzamento_guide', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_barche_tipo'), 'barche', ['tipo'], unique=False)
    op.create_index(op.f('ix_barche_id'), 'barche', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=1)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('macro_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_macro_groups_name'), 'macro_groups', ['name'], unique=1)
    op.create_index(op.f('ix_macro_groups_id'), 'macro_groups', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(), nullable=False),
    sa.Column('last_name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), nullable=True),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('tax_code', sa.VARCHAR(), nullable=True),
    sa.Column('enrollment_year', sa.INTEGER(), nullable=True),
    sa.Column('membership_date', sa.DATE(), nullable=True),
    sa.Column('certificate_expiration', sa.DATE(), nullable=True),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('manual_category', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tax_code')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=1)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    op.create_table('categorie',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nome', sa.VARCHAR(), nullable=False),
    sa.Column('eta_min', sa.INTEGER(), nullable=False),
    sa.Column('eta_max', sa.INTEGER(), nullable=False),
    sa.Column('ordine', sa.INTEGER(), nullable=True),
    sa.Column('macro_group', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome')
    )
    op.create_table('tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('category', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=1)
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_table('allenamenti',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('tipo', sa.VARCHAR(), nullable=False),
    sa.Column('descrizione', sa.VARCHAR(), nullable=True),
    sa.Column('data', sa.DATE(), nullable=False),
    sa.Column('orario', sa.VARCHAR(), nullable=True),
    sa.Column('recurrence_id', sa.VARCHAR(), nullable=True),
    sa.Column('macro_group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['macro_group_id'], ['macro_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allenamenti_recurrence_id'), 'allenamenti', ['recurrence_id'], unique=False)
    op.create_index(op.f('ix_allenamenti_id'), 'allenamenti', ['id'], unique=False)
    op.create_table('esercizi_pesi',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ordine', sa.INTEGER(), nullable=False),
    sa.Column('nome', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome')
    )
    op.create_table('subgroups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('macro_group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['macro_group_id'], ['macro_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subgroups_id'), 'subgroups', ['id'], unique=False)
    # ### end Alembic commands ###
